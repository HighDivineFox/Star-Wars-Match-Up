{"ast":null,"code":"var _jsxFileName = \"D:\\\\apache\\\\htdocs\\\\React\\\\FreeCodeCampTuts\\\\API\\\\api-prac\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport { forInStatement } from '@babel/types';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      characterData: {},\n      fistCharacter: {},\n      secondCharacter: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(\"https://swapi.co/api/people/\").then(response => response.json()).then(data => {\n      this.setState({\n        isLoading: false,\n        characterData: data\n      });\n    }).then(() => {\n      this.setState(prevState => {\n        var newState = {\n          fistCharacter: prevState.characterData[Math.random() * prevState.characterData.length],\n          secondCharacter: prevState.characterData[Math.random() * prevState.characterData.length]\n        };\n        return newState;\n      });\n    });\n  }\n\n  render() {\n    text = \"\";\n\n    if (this.state.isLoading) {\n      text = \"Loading\";\n    } else {\n      text = this.state.characterData[Math.random() * this.state.characterData.length].name;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Title Bout App\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, text));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\apache\\htdocs\\React\\FreeCodeCampTuts\\API\\api-prac\\src\\App.js"],"names":["React","forInStatement","App","Component","constructor","state","isLoading","characterData","fistCharacter","secondCharacter","componentDidMount","setState","fetch","then","response","json","data","prevState","newState","Math","random","length","render","text","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,aAAa,EAAE,EAFJ;AAGXC,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,eAAe,EAAE;AAJN,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,QAAL,CAAc;AACZL,MAAAA,SAAS,EAAG;AADA,KAAd;AAIAM,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,WAAKL,QAAL,CAAc;AACZL,QAAAA,SAAS,EAAE,KADC;AAEZC,QAAAA,aAAa,EAAES;AAFH,OAAd;AAID,KAPH,EAQGH,IARH,CAQQ,MAAM;AACV,WAAKF,QAAL,CAAeM,SAAD,IAAe;AAC3B,YAAIC,QAAQ,GAAG;AACbV,UAAAA,aAAa,EAAGS,SAAS,CAACV,aAAV,CAAwBY,IAAI,CAACC,MAAL,KAAgBH,SAAS,CAACV,aAAV,CAAwBc,MAAhE,CADH;AAEbZ,UAAAA,eAAe,EAAGQ,SAAS,CAACV,aAAV,CAAwBY,IAAI,CAACC,MAAL,KAAgBH,SAAS,CAACV,aAAV,CAAwBc,MAAhE;AAFL,SAAf;AAIE,eAAOH,QAAP;AACH,OAND;AAQD,KAjBH;AAmBD;;AAEDI,EAAAA,MAAM,GAAG;AACPC,IAAAA,IAAI,GAAG,EAAP;;AAEA,QAAI,KAAKlB,KAAL,CAAWC,SAAf,EAAyB;AACvBiB,MAAAA,IAAI,GAAG,SAAP;AACD,KAFD,MAEK;AACHA,MAAAA,IAAI,GAAG,KAAKlB,KAAL,CAAWE,aAAX,CAAyBY,IAAI,CAACC,MAAL,KAAgB,KAAKf,KAAL,CAAWE,aAAX,CAAyBc,MAAlE,EAA0EG,IAAjF;AACD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CADF,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IADH,CAJA,CADF;AAWD;;AAzD+B;;AA6DlC,eAAerB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { forInStatement } from '@babel/types';\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      isLoading: false,\n      characterData: {},\n      fistCharacter: {},\n      secondCharacter: {}\n    }\n  }\n\n  componentDidMount(){\n    this.setState({\n      isLoading : true\n    })\n\n    fetch(\"https://swapi.co/api/people/\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          isLoading: false,\n          characterData: data\n        })\n      })\n      .then(() => {\n        this.setState((prevState) => {\n          var newState = {\n            fistCharacter : prevState.characterData[Math.random() * prevState.characterData.length],\n            secondCharacter : prevState.characterData[Math.random() * prevState.characterData.length]\n          }\n            return newState\n        })\n        \n      })\n    \n  }\n\n  render() {\n    text = \"\"\n    \n    if (this.state.isLoading){\n      text = \"Loading\"\n    }else{\n      text = this.state.characterData[Math.random() * this.state.characterData.length].name\n    }\n\n    return (\n      <div>\n        <div>\n        <h1>Title Bout App</h1>\n      </div>\n      <div>\n        {text}        \n      </div>\n      </div>\n      \n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}