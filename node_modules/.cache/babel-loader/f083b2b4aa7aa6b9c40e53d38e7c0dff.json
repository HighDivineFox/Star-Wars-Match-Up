{"ast":null,"code":"var _jsxFileName = \"D:\\\\apache\\\\htdocs\\\\React\\\\FreeCodeCampTuts\\\\API\\\\api-prac\\\\src\\\\Components\\\\CharacterChoice.js\";\nimport React from 'react';\nimport arrowLeft from \"../Images/arrowLeft.png\";\nimport arrowLeft_Hover from \"../Images/arrowLeft_Hover.png\";\nimport arrowLeft_Pressed from \"../Images/arrowLeft_Pressed.png\";\nimport arrowRight from \"../Images/arrowRight.png\";\n\nclass CharacterChoice extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      leftArrowSrc: arrowLeft,\n      rightArrowSrc: arrowRight\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"CharacterSelection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"left\",\n      src: this.state.leftArrowSrc,\n      alt: \"Left Arrow\",\n      onClick: this.props.onClickRight,\n      onMouseOver: this.getHoverImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      id: \"right\",\n      src: this.state.rightArrowSrc,\n      alt: \"Right Arrow\",\n      onClick: this.props.onClickLeft,\n      onMouseOver: this.getHoverImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n  getHoverImage(e) {\n    if (e.currentTarget.id === \"left\") {\n      this.setState({\n        leftArrowSrc: arrowLeft_Hover\n      });\n    } else if (e.currentTarget.id === \"right\") {}\n  }\n\n}\n\nexport default CharacterChoice;","map":{"version":3,"sources":["D:\\apache\\htdocs\\React\\FreeCodeCampTuts\\API\\api-prac\\src\\Components\\CharacterChoice.js"],"names":["React","arrowLeft","arrowLeft_Hover","arrowLeft_Pressed","arrowRight","CharacterChoice","Component","constructor","props","state","leftArrowSrc","rightArrowSrc","render","onClickRight","getHoverImage","onClickLeft","e","currentTarget","id","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAGA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA8C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAET,SADL;AAETU,MAAAA,aAAa,EAAEP;AAFN,KAAb;AAIH;;AAEDQ,EAAAA,MAAM,GAAG;AAEL,WACI;AAAK,MAAA,EAAE,EAAC,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,GAAG,EAAE,KAAKH,KAAL,CAAWC,YAA/B;AAA6C,MAAA,GAAG,EAAC,YAAjD;AAA8D,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWK,YAAlF;AAAgG,MAAA,WAAW,EAAE,KAAKC,aAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAgB,MAAA,GAAG,EAAE,KAAKL,KAAL,CAAWE,aAAhC;AAA+C,MAAA,GAAG,EAAC,aAAnD;AAAiE,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWO,WAArF;AAAkG,MAAA,WAAW,EAAE,KAAKD,aAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAEDA,EAAAA,aAAa,CAACE,CAAD,EAAG;AACZ,QAAGA,CAAC,CAACC,aAAF,CAAgBC,EAAhB,KAAuB,MAA1B,EAAiC;AAC7B,WAAKC,QAAL,CAAc;AACVT,QAAAA,YAAY,EAAER;AADJ,OAAd;AAGH,KAJD,MAIM,IAAGc,CAAC,CAACC,aAAF,CAAgBC,EAAhB,KAAuB,OAA1B,EAAkC,CAEvC;AACJ;;AA3ByC;;AA8B9C,eAAeb,eAAf","sourcesContent":["import React from 'react';\r\nimport arrowLeft from \"../Images/arrowLeft.png\";\r\nimport arrowLeft_Hover from \"../Images/arrowLeft_Hover.png\";\r\nimport arrowLeft_Pressed from \"../Images/arrowLeft_Pressed.png\";\r\nimport arrowRight from \"../Images/arrowRight.png\";\r\n\r\n\r\nclass CharacterChoice extends React.Component {\r\n    constructor(props){\r\n        super()\r\n        this.state = {\r\n            leftArrowSrc: arrowLeft,\r\n            rightArrowSrc: arrowRight\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"CharacterSelection\">\r\n                <img id=\"left\" src={this.state.leftArrowSrc} alt=\"Left Arrow\" onClick={this.props.onClickRight} onMouseOver={this.getHoverImage}/>\r\n                <img id=\"right\" src={this.state.rightArrowSrc} alt=\"Right Arrow\" onClick={this.props.onClickLeft} onMouseOver={this.getHoverImage}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getHoverImage(e){\r\n        if(e.currentTarget.id === \"left\"){\r\n            this.setState({\r\n                leftArrowSrc: arrowLeft_Hover\r\n            })\r\n        }else if(e.currentTarget.id === \"right\"){\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport default CharacterChoice;"]},"metadata":{},"sourceType":"module"}