{"ast":null,"code":"var _jsxFileName = \"D:\\\\apache\\\\htdocs\\\\React\\\\FreeCodeCampTuts\\\\API\\\\api-prac\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Content from './Components/Content';\nimport CharacterChoice from './Components/CharacterChoice';\nimport jsonScenarios from \"./scenarios.js\";\n/*\n  App feature.\n    Ability to seelct which character wins in a certain scenario.\n*/\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      scenario: \"\",\n      leftChar: null,\n      rightChar: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Header, {\n      scenario: this.state.scenario,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Content, {\n      leftChar: this.state.leftChar,\n      rightChar: this.state.rightChar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(CharacterChoice, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n  componentDidMount() {\n    var charIndex1 = Math.ceil(Math.random() * 88);\n    var charIndex2 = Math.ceil(Math.random() * 88);\n    var charURL1 = \"https://swapi.co/api/people/\" + charIndex1;\n    var charURL2 = \"https://swapi.co/api/people/\" + charIndex2;\n    var leftChar = null;\n    var rightChar = null;\n    Promise.all([fetch(charURL1).then(response => response.json()), fetch(charURL2).then(response => response.json())]).then(characters => {\n      Promise.all([fetch(characters[0].species).then(response => response.json()).then(species => {\n        leftChar = this.getCharacterObject(characters[0], species, charIndex1);\n      }), fetch(characters[1].species).then(response => response.json()).then(species => {\n        rightChar = this.getCharacterObject(characters[1], species, charIndex2);\n      })]).then(data => {\n        this.setState({\n          scenario: this.getScenario(),\n          leftChar: leftChar,\n          rightChar: rightChar\n        });\n      });\n    });\n  }\n\n  getScenario() {\n    return jsonScenarios.scenarios[Math.floor(Math.random() * jsonScenarios.scenarios.length)];\n  }\n\n  getCharacterObject(character, species, index) {\n    return {\n      index: index,\n      name: character.name,\n      species: species.name,\n      gender: character.gender,\n      birth_year: character.birth_year,\n      hair_color: character.hair_color,\n      mass: character.mass\n    };\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\apache\\htdocs\\React\\FreeCodeCampTuts\\API\\api-prac\\src\\App.js"],"names":["React","Header","Content","CharacterChoice","jsonScenarios","App","Component","constructor","state","scenario","leftChar","rightChar","render","componentDidMount","charIndex1","Math","ceil","random","charIndex2","charURL1","charURL2","Promise","all","fetch","then","response","json","characters","species","getCharacterObject","data","setState","getScenario","scenarios","floor","length","character","index","name","gender","birth_year","hair_color","mass"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Content from './Components/Content';\nimport CharacterChoice from './Components/CharacterChoice';\nimport jsonScenarios from \"./scenarios.js\";\n\n/*\n  App feature.\n    Ability to seelct which character wins in a certain scenario.\n*/\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      scenario: \"\",\n      leftChar: null,\n      rightChar: null,\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header scenario={this.state.scenario}/>\n        <Content leftChar={this.state.leftChar} rightChar = {this.state.rightChar}/>\n        <CharacterChoice />\n      </div>\n    )\n  }\n\n  componentDidMount(){\n\n    var charIndex1 = Math.ceil(Math.random() * 88)\n    var charIndex2 = Math.ceil(Math.random() * 88)\n\n    var charURL1 = \"https://swapi.co/api/people/\" + charIndex1\n    var charURL2 = \"https://swapi.co/api/people/\" + charIndex2\n\n    var leftChar = null;\n    var rightChar = null;\n\n    Promise.all([\n      fetch(charURL1).then(response => response.json()),\n      fetch(charURL2).then(response => response.json())\n    ]).then(characters => {\n\n      Promise.all([\n        fetch(characters[0].species).then(response => response.json()).then(species => {\n          leftChar = this.getCharacterObject(characters[0], species, charIndex1)\n        }),  \n        fetch(characters[1].species).then(response => response.json()).then(species => {\n          rightChar = this.getCharacterObject(characters[1], species, charIndex2)\n        })\n      ]).then(data => {\n        this.setState({\n          scenario: this.getScenario(),\n          leftChar: leftChar,\n          rightChar: rightChar\n        })\n      })\n    })\n  }\n\n  getScenario(){\n    return jsonScenarios.scenarios[Math.floor(Math.random() * jsonScenarios.scenarios.length)]\n  }\n\n  getCharacterObject(character, species, index){\n    return {\n        index: index,\n        name: character.name,\n        species: species.name,\n        gender: character.gender,\n        birth_year: character.birth_year,\n        hair_color: character.hair_color,\n        mass: character.mass\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}