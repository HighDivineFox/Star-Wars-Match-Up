{"ast":null,"code":"var _jsxFileName = \"D:\\\\apache\\\\htdocs\\\\React\\\\FreeCodeCampTuts\\\\API\\\\api-prac\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport { forInStatement } from '@babel/types';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      fistCharacter: {},\n      secondCharacter: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    var firstCharIndex = Math.floor(Math.random() * 88);\n    var secondCharIndex = Math.floor(Math.random() * 88);\n    var firstCharURL = \"https://swapi.co/api/people/\" + firstCharIndex;\n    var secondCharURL = \"https://swapi.co/api/people/\" + secondCharIndex;\n    this.setState(() => {\n      Promise.all([fetch(firstCharURL).then(response => response.json()), fetch(secondCharURL).then(response => response.json())]).then(([first, second]) => {\n        console.log(first);\n        console.log(second);\n        var newState = {\n          isLoading: false,\n          fistCharacter: first,\n          secondCharacter: second\n        };\n        return newState;\n      });\n    });\n    /*\n    fetch(\"https://swapi.co/api/people/\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          isLoading: false,\n          characterData: data,\n          fistCharacter: data.results[0],\n          secondCharacter: data.results[1]\n        })\n      })\n    */\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Title Bout App\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.isLoading ? \"Loading\" : this.state.fistCharacter.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.isLoading ? \"Loading\" : this.state.secondCharacter.name));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\apache\\htdocs\\React\\FreeCodeCampTuts\\API\\api-prac\\src\\App.js"],"names":["React","forInStatement","App","Component","constructor","state","isLoading","fistCharacter","secondCharacter","componentDidMount","setState","firstCharIndex","Math","floor","random","secondCharIndex","firstCharURL","secondCharURL","Promise","all","fetch","then","response","json","first","second","console","log","newState","render","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,aAAa,EAAE,EAFJ;AAGXC,MAAAA,eAAe,EAAE;AAHN,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,QAAL,CAAc;AACZJ,MAAAA,SAAS,EAAG;AADA,KAAd;AAIA,QAAIK,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAArB;AACA,QAAIC,eAAe,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAtB;AAEA,QAAIE,YAAY,GAAG,iCAAiCL,cAApD;AACA,QAAIM,aAAa,GAAG,iCAAiCF,eAArD;AAIA,SAAKL,QAAL,CAAc,MAAM;AAClBQ,MAAAA,OAAO,CAACC,GAAR,CAAY,CACVC,KAAK,CAACJ,YAAD,CAAL,CAAoBK,IAApB,CAAyBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAArC,CADU,EAEVH,KAAK,CAACH,aAAD,CAAL,CAAqBI,IAArB,CAA0BC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAtC,CAFU,CAAZ,EAGGF,IAHH,CAGQ,CAAC,CAACG,KAAD,EAAQC,MAAR,CAAD,KAAoB;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,YAAIG,QAAQ,GAAG;AACbtB,UAAAA,SAAS,EAAG,KADC;AAEbC,UAAAA,aAAa,EAAGiB,KAFH;AAGbhB,UAAAA,eAAe,EAAGiB;AAHL,SAAf;AAKA,eAAOG,QAAP;AACD,OAZD;AAeD,KAhBD;AAkBA;;;;;;;;;;;;AAaD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKxB,KAAL,CAAWC,SAAX,GAAuB,SAAvB,GAAmC,KAAKD,KAAL,CAAWE,aAAX,CAAyBuB,IAD/D,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKzB,KAAL,CAAWC,SAAX,GAAuB,SAAvB,GAAmC,KAAKD,KAAL,CAAWG,eAAX,CAA2BsB,IADjE,CAPF,CADF;AAaD;;AAtE+B;;AA0ElC,eAAe5B,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { forInStatement } from '@babel/types';\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      isLoading: false,\n      fistCharacter: {},\n      secondCharacter: {}\n    }\n  }\n\n  componentDidMount(){\n    this.setState({\n      isLoading : true\n    })\n\n    var firstCharIndex = Math.floor(Math.random() * 88)\n    var secondCharIndex = Math.floor(Math.random() * 88)\n\n    var firstCharURL = \"https://swapi.co/api/people/\" + firstCharIndex\n    var secondCharURL = \"https://swapi.co/api/people/\" + secondCharIndex\n\n    \n\n    this.setState(() => {\n      Promise.all([\n        fetch(firstCharURL).then(response => response.json()),\n        fetch(secondCharURL).then(response => response.json())\n      ]).then(([first, second]) =>{\n        console.log(first)\n        console.log(second)\n        var newState = {\n          isLoading : false,\n          fistCharacter : first,\n          secondCharacter : second\n        }\n        return newState\n      })\n\n      \n    })\n\n    /*\n    fetch(\"https://swapi.co/api/people/\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          isLoading: false,\n          characterData: data,\n          fistCharacter: data.results[0],\n          secondCharacter: data.results[1]\n        })\n      })\n    */\n    \n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n        <h1>Title Bout App</h1>\n        </div>\n        <div>\n          {this.state.isLoading ? \"Loading\" : this.state.fistCharacter.name}\n        </div>\n        <div>\n          {this.state.isLoading ? \"Loading\" : this.state.secondCharacter.name}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}