{"ast":null,"code":"var _jsxFileName = \"D:\\\\apache\\\\htdocs\\\\React\\\\FreeCodeCampTuts\\\\API\\\\api-prac\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Content from './Components/Content';\nimport CharacterChoice from './Components/CharacterChoice';\nimport jsonScenarios from \"./scenarios.js\";\n/*\n  App feature.\n    Ability to seelct which character wins in a certain scenario.\n*/\n// TODO: Keep track of selected Id's so we don't reroll them.\n//        Make sure characters can't match up against themselves\n//        Reroll scenario\n//        See stats for all scenarios\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      scenario: \"\",\n      leftChar: null,\n      rightChar: null,\n      selectedIndexes: []\n    };\n    this.newLeftChar();\n    this.newRightChar();\n    this.newLeftChar = this.newLeftChar.bind(this);\n    this.newRightChar = this.newRightChar.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Header, {\n      scenario: this.state.scenario,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Content, {\n      leftChar: this.state.leftChar,\n      rightChar: this.state.rightChar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(CharacterChoice, {\n      onClickLeft: this.newLeftChar,\n      onClickRight: this.newRightChar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n  componentDidMount() {\n    this.setState({\n      scenario: this.getScenario()\n    });\n  }\n\n  validationFailed(index) {\n    if (index === 17) {\n      console.log(\"17 selected. Invalid choice. Picking again.\");\n      return true;\n    }\n\n    if (index in this.state.selectedIndexes) {\n      console.log(\"Index already picked\");\n      return true;\n    }\n\n    if (this.state.leftChar === null || this.state.rightChar === null) {\n      return false;\n    }\n\n    if (this.state.leftChar.index === this.state.rightChar.index) {\n      console.log(\"Same characters selected\");\n      return true;\n    }\n\n    return false;\n  }\n\n  getScenario() {\n    return jsonScenarios.scenarios[Math.floor(Math.random() * jsonScenarios.scenarios.length)];\n  }\n\n  newLeftChar() {\n    var charIndex1 = this.getNewCharacterIndex();\n    var charURL1 = \"https://swapi.co/api/people/\" + charIndex1;\n    var leftChar = null;\n\n    while (this.validationFailed(charIndex1)) {\n      charIndex1 = this.getNewCharacterIndex();\n    }\n\n    var newArr = this.state.selectedIndexes;\n    newArr.push([charIndex1]);\n    fetch(charURL1).then(response => response.json()).then(character => {\n      fetch(character.species).then(response => response.json()).then(species => {\n        leftChar = this.getCharacterObject(character, species, charIndex1);\n      }).then(data => {\n        this.setState({\n          leftChar: leftChar\n        });\n      });\n    });\n  }\n\n  newRightChar() {\n    var charIndex1 = this.getNewCharacterIndex();\n    var charURL1 = \"https://swapi.co/api/people/\" + charIndex1;\n    var rightChar = null;\n\n    while (this.validationFailed(charIndex1)) {\n      charIndex1 = this.getNewCharacterIndex();\n    }\n\n    var newArr = this.state.selectedIndexes;\n    newArr.push([charIndex1]);\n    fetch(charURL1).then(response => response.json()).then(character => {\n      fetch(character.species).then(response => response.json()).then(species => {\n        rightChar = this.getCharacterObject(character, species, charIndex1);\n      }).then(data => {\n        this.setState({\n          rightChar: rightChar\n        });\n      });\n    });\n  }\n\n  getCharacterObject(character, species, index) {\n    return {\n      index: index,\n      name: character.name,\n      species: species.name,\n      gender: character.gender,\n      birth_year: character.birth_year,\n      hair_color: character.hair_color,\n      mass: character.mass\n    };\n  }\n\n  getNewCharacterIndex() {\n    console.log(\"Characters left: \" + (88 - this.state.selectedIndexes.length));\n    var rand = Math.ceil(Math.random() * 88);\n    console.log(\"index: \" + rand);\n    return rand;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\apache\\htdocs\\React\\FreeCodeCampTuts\\API\\api-prac\\src\\App.js"],"names":["React","Header","Content","CharacterChoice","jsonScenarios","App","Component","constructor","state","scenario","leftChar","rightChar","selectedIndexes","newLeftChar","newRightChar","bind","render","componentDidMount","setState","getScenario","validationFailed","index","console","log","scenarios","Math","floor","random","length","charIndex1","getNewCharacterIndex","charURL1","newArr","push","fetch","then","response","json","character","species","getCharacterObject","data","name","gender","birth_year","hair_color","mass","rand","ceil"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA;;;;AAKA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,IAFC;AAGXC,MAAAA,SAAS,EAAE,IAHA;AAIXC,MAAAA,eAAe,EAAE;AAJN,KAAb;AAOA,SAAKC,WAAL;AACA,SAAKC,YAAL;AAEA,SAAKD,WAAL,GAAmB,KAAKA,WAAL,CAAiBE,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKD,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAA9B;AAAwC,MAAA,SAAS,EAAI,KAAKF,KAAL,CAAWG,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,eAAD;AAAiB,MAAA,WAAW,EAAE,KAAKE,WAAnC;AAAgD,MAAA,YAAY,EAAE,KAAKC,YAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAEDG,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,QAAL,CAAc;AACZT,MAAAA,QAAQ,EAAE,KAAKU,WAAL;AADE,KAAd;AAGD;;AAEDC,EAAAA,gBAAgB,CAACC,KAAD,EAAO;AACnB,QAAGA,KAAK,KAAK,EAAb,EAAgB;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AACA,aAAO,IAAP;AACD;;AAED,QAAGF,KAAK,IAAI,KAAKb,KAAL,CAAWI,eAAvB,EAAuC;AACrCU,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,aAAO,IAAP;AACD;;AAED,QAAG,KAAKf,KAAL,CAAWE,QAAX,KAAwB,IAAxB,IAAgC,KAAKF,KAAL,CAAWG,SAAX,KAAyB,IAA5D,EAAiE;AAC/D,aAAO,KAAP;AACD;;AAED,QAAG,KAAKH,KAAL,CAAWE,QAAX,CAAoBW,KAApB,KAA8B,KAAKb,KAAL,CAAWG,SAAX,CAAqBU,KAAtD,EAA4D;AAC1DC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,aAAO,IAAP;AACD;;AAEH,WAAO,KAAP;AACD;;AAEDJ,EAAAA,WAAW,GAAE;AACX,WAAOf,aAAa,CAACoB,SAAd,CAAwBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBvB,aAAa,CAACoB,SAAd,CAAwBI,MAAnD,CAAxB,CAAP;AACD;;AAEDf,EAAAA,WAAW,GAAE;AAEX,QAAIgB,UAAU,GAAG,KAAKC,oBAAL,EAAjB;AACA,QAAIC,QAAQ,GAAG,iCAAiCF,UAAhD;AACA,QAAInB,QAAQ,GAAG,IAAf;;AAEA,WAAO,KAAKU,gBAAL,CAAsBS,UAAtB,CAAP,EAAyC;AACvCA,MAAAA,UAAU,GAAG,KAAKC,oBAAL,EAAb;AACD;;AAED,QAAIE,MAAM,GAAG,KAAKxB,KAAL,CAAWI,eAAxB;AACAoB,IAAAA,MAAM,CAACC,IAAP,CAAY,CAACJ,UAAD,CAAZ;AAEAK,IAAAA,KAAK,CAACH,QAAD,CAAL,CAAgBI,IAAhB,CAAqBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAjC,EAAkDF,IAAlD,CAAuDG,SAAS,IAAI;AAClEJ,MAAAA,KAAK,CAACI,SAAS,CAACC,OAAX,CAAL,CAAyBJ,IAAzB,CAA8BC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA1C,EAA2DF,IAA3D,CAAgEI,OAAO,IAAI;AACzE7B,QAAAA,QAAQ,GAAG,KAAK8B,kBAAL,CAAwBF,SAAxB,EAAmCC,OAAnC,EAA4CV,UAA5C,CAAX;AACD,OAFD,EAEGM,IAFH,CAEQM,IAAI,IAAI;AACd,aAAKvB,QAAL,CAAc;AACZR,UAAAA,QAAQ,EAAEA;AADE,SAAd;AAGD,OAND;AAOD,KARD;AASD;;AAEDI,EAAAA,YAAY,GAAE;AACZ,QAAIe,UAAU,GAAG,KAAKC,oBAAL,EAAjB;AACA,QAAIC,QAAQ,GAAG,iCAAiCF,UAAhD;AACA,QAAIlB,SAAS,GAAG,IAAhB;;AAEA,WAAO,KAAKS,gBAAL,CAAsBS,UAAtB,CAAP,EAAyC;AACvCA,MAAAA,UAAU,GAAG,KAAKC,oBAAL,EAAb;AACD;;AAED,QAAIE,MAAM,GAAG,KAAKxB,KAAL,CAAWI,eAAxB;AACAoB,IAAAA,MAAM,CAACC,IAAP,CAAY,CAACJ,UAAD,CAAZ;AAEAK,IAAAA,KAAK,CAACH,QAAD,CAAL,CAAgBI,IAAhB,CAAqBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAjC,EAAkDF,IAAlD,CAAuDG,SAAS,IAAI;AAClEJ,MAAAA,KAAK,CAACI,SAAS,CAACC,OAAX,CAAL,CAAyBJ,IAAzB,CAA8BC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA1C,EAA2DF,IAA3D,CAAgEI,OAAO,IAAI;AACzE5B,QAAAA,SAAS,GAAG,KAAK6B,kBAAL,CAAwBF,SAAxB,EAAmCC,OAAnC,EAA4CV,UAA5C,CAAZ;AACD,OAFD,EAEGM,IAFH,CAEQM,IAAI,IAAI;AACd,aAAKvB,QAAL,CAAc;AACZP,UAAAA,SAAS,EAAEA;AADC,SAAd;AAGD,OAND;AAOD,KARD;AASD;;AAED6B,EAAAA,kBAAkB,CAACF,SAAD,EAAYC,OAAZ,EAAqBlB,KAArB,EAA2B;AAE3C,WAAO;AACHA,MAAAA,KAAK,EAAEA,KADJ;AAEHqB,MAAAA,IAAI,EAAEJ,SAAS,CAACI,IAFb;AAGHH,MAAAA,OAAO,EAAEA,OAAO,CAACG,IAHd;AAIHC,MAAAA,MAAM,EAAEL,SAAS,CAACK,MAJf;AAKHC,MAAAA,UAAU,EAAEN,SAAS,CAACM,UALnB;AAMHC,MAAAA,UAAU,EAAEP,SAAS,CAACO,UANnB;AAOHC,MAAAA,IAAI,EAAER,SAAS,CAACQ;AAPb,KAAP;AASD;;AAEDhB,EAAAA,oBAAoB,GAAE;AACpBR,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuB,KAAK,KAAKf,KAAL,CAAWI,eAAX,CAA2BgB,MAAvD,CAAZ;AAEA,QAAImB,IAAI,GAAGtB,IAAI,CAACuB,IAAL,CAAUvB,IAAI,CAACE,MAAL,KAAgB,EAA1B,CAAX;AAEAL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYwB,IAAxB;AAEA,WAAOA,IAAP;AACD;;AAhI+B;;AAmIlC,eAAe1C,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Content from './Components/Content';\nimport CharacterChoice from './Components/CharacterChoice';\nimport jsonScenarios from \"./scenarios.js\";\n\n/*\n  App feature.\n    Ability to seelct which character wins in a certain scenario.\n*/\n\n// TODO: Keep track of selected Id's so we don't reroll them.\n//        Make sure characters can't match up against themselves\n//        Reroll scenario\n//        See stats for all scenarios\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      scenario: \"\",\n      leftChar: null,\n      rightChar: null,\n      selectedIndexes: []\n    }\n\n    this.newLeftChar()\n    this.newRightChar()\n\n    this.newLeftChar = this.newLeftChar.bind(this)\n    this.newRightChar = this.newRightChar.bind(this)\n  }\n\n  render() {\n    return (\n      <div>\n        <Header scenario={this.state.scenario}/>\n        <Content leftChar={this.state.leftChar} rightChar = {this.state.rightChar}/>\n        <CharacterChoice onClickLeft={this.newLeftChar} onClickRight={this.newRightChar}/>\n      </div>\n    )\n  }\n\n  componentDidMount(){\n    this.setState({\n      scenario: this.getScenario()\n    })\n  }\n\n  validationFailed(index){\n      if(index === 17){\n        console.log(\"17 selected. Invalid choice. Picking again.\")\n        return true;\n      }\n\n      if(index in this.state.selectedIndexes){\n        console.log(\"Index already picked\")\n        return true\n      }\n\n      if(this.state.leftChar === null || this.state.rightChar === null){\n        return false\n      }\n\n      if(this.state.leftChar.index === this.state.rightChar.index){\n        console.log(\"Same characters selected\")\n        return true;\n      }\n\n    return false\n  }\n\n  getScenario(){\n    return jsonScenarios.scenarios[Math.floor(Math.random() * jsonScenarios.scenarios.length)]\n  }\n\n  newLeftChar(){\n    \n    var charIndex1 = this.getNewCharacterIndex()\n    var charURL1 = \"https://swapi.co/api/people/\" + charIndex1\n    var leftChar = null;\n\n    while (this.validationFailed(charIndex1)){\n      charIndex1 = this.getNewCharacterIndex()\n    }\n\n    var newArr = this.state.selectedIndexes\n    newArr.push([charIndex1])\n\n    fetch(charURL1).then(response => response.json()).then(character => {\n      fetch(character.species).then(response => response.json()).then(species => {\n        leftChar = this.getCharacterObject(character, species, charIndex1)\n      }).then(data => {\n        this.setState({\n          leftChar: leftChar\n        })\n      })\n    })\n  }\n\n  newRightChar(){\n    var charIndex1 = this.getNewCharacterIndex()\n    var charURL1 = \"https://swapi.co/api/people/\" + charIndex1\n    var rightChar = null;\n\n    while (this.validationFailed(charIndex1)){\n      charIndex1 = this.getNewCharacterIndex()\n    }\n\n    var newArr = this.state.selectedIndexes\n    newArr.push([charIndex1])\n\n    fetch(charURL1).then(response => response.json()).then(character => {\n      fetch(character.species).then(response => response.json()).then(species => {\n        rightChar = this.getCharacterObject(character, species, charIndex1)\n      }).then(data => {\n        this.setState({\n          rightChar: rightChar\n        })\n      })\n    })\n  }\n\n  getCharacterObject(character, species, index){\n\n    return {\n        index: index,\n        name: character.name,\n        species: species.name,\n        gender: character.gender,\n        birth_year: character.birth_year,\n        hair_color: character.hair_color,\n        mass: character.mass\n    }\n  }\n\n  getNewCharacterIndex(){\n    console.log(\"Characters left: \" + (88 - this.state.selectedIndexes.length))\n\n    var rand = Math.ceil(Math.random() * 88)\n    \n    console.log(\"index: \" + rand)\n\n    return rand\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}