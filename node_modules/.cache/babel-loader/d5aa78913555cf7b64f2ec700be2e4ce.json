{"ast":null,"code":"var _jsxFileName = \"D:\\\\apache\\\\htdocs\\\\React\\\\FreeCodeCampTuts\\\\API\\\\api-prac\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Content from './Components/Content';\nimport Reroll from './Components/Reroll';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      firstCharacter: {},\n      secondCharacter: {},\n      firstCharIndex: -5,\n      secondCharIndex: -5\n    };\n    this.getCharacters = this.getCharacters.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCharacters();\n  }\n\n  getCharacters() {\n    this.setState({\n      isLoading: true\n    });\n    var firstCharIndex = Math.ceil(Math.random() * 88);\n    var secondCharIndex = Math.ceil(Math.random() * 88);\n\n    while (firstCharIndex === 17) {\n      firstCharIndex = Math.ceil(Math.random() * 88);\n    }\n\n    while (secondCharIndex === 17) {\n      secondCharIndex = Math.ceil(Math.random() * 88);\n    }\n\n    while (firstCharIndex === secondCharIndex) {\n      secondCharIndex = Math.ceil(Math.random() * 88);\n    }\n\n    var firstCharURL = \"https://swapi.co/api/people/\" + firstCharIndex;\n    var secondCharURL = \"https://swapi.co/api/people/\" + secondCharIndex;\n    Promise.all([fetch(firstCharURL).then(response => response.json()), fetch(secondCharURL).then(response => response.json())]).then(characters => {\n      Promise.all([fetch(characters[0].species).then(response => response.json()), fetch(characters[1].species).then(response => response.json())]).then(species => {\n        this.setState({\n          isLoading: false,\n          firstCharacter: characters[0],\n          secondCharacter: characters[1],\n          firstCharIndex: firstCharIndex,\n          secondCharIndex: secondCharIndex,\n          firstCharSpecies: species[0].name,\n          secondCharSpecies: species[1].name\n        });\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Content, {\n      isLoading: this.state.isLoading,\n      firstChar: this.state.firstCharacter,\n      firstCharSpecies: this.state.firstCharSpecies,\n      secondChar: this.state.secondCharacter,\n      secondCharSpecies: this.state.secondCharSpecies,\n      firstCharIndex: this.state.firstCharIndex,\n      secondCharIndex: this.state.secondCharIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Reroll, {\n      event: this.getCharacters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\apache\\htdocs\\React\\FreeCodeCampTuts\\API\\api-prac\\src\\App.js"],"names":["React","Header","Content","Reroll","App","Component","constructor","state","isLoading","firstCharacter","secondCharacter","firstCharIndex","secondCharIndex","getCharacters","bind","componentDidMount","setState","Math","ceil","random","firstCharURL","secondCharURL","Promise","all","fetch","then","response","json","characters","species","firstCharSpecies","name","secondCharSpecies","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Content from './Components/Content';\nimport Reroll from './Components/Reroll';\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      isLoading: false,\n      firstCharacter: {},\n      secondCharacter: {},\n      firstCharIndex: -5,\n      secondCharIndex: -5\n    }\n\n    this.getCharacters = this.getCharacters.bind(this)\n  }\n\n  componentDidMount(){\n    this.getCharacters()\n  }\n\n  getCharacters(){\n    this.setState({\n      isLoading : true\n    })\n\n    var firstCharIndex = Math.ceil(Math.random() * 88)\n    var secondCharIndex = Math.ceil(Math.random() * 88)\n\n    while(firstCharIndex === 17){\n      firstCharIndex = Math.ceil(Math.random() * 88)\n    }\n\n    while(secondCharIndex === 17){\n      secondCharIndex = Math.ceil(Math.random() * 88)\n    }\n\n    while(firstCharIndex === secondCharIndex){\n      secondCharIndex = Math.ceil(Math.random() * 88)\n    }\n\n    var firstCharURL = \"https://swapi.co/api/people/\" + firstCharIndex\n    var secondCharURL = \"https://swapi.co/api/people/\" + secondCharIndex\n\n    Promise.all([\n      fetch(firstCharURL).then(response => response.json()),\n      fetch(secondCharURL).then(response => response.json())\n    ]).then((characters) => {\n      Promise.all([\n        fetch(characters[0].species).then(response => response.json()),\n        fetch(characters[1].species).then(response => response.json())\n      ]).then((species) => {\n        this.setState({\n          isLoading : false,\n          firstCharacter : characters[0],\n          secondCharacter : characters[1],\n          firstCharIndex: firstCharIndex,\n          secondCharIndex: secondCharIndex,\n          firstCharSpecies: species[0].name,\n          secondCharSpecies: species[1].name\n        })\n      })\n    })    \n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Content isLoading={this.state.isLoading}\n          firstChar={this.state.firstCharacter}\n          firstCharSpecies={this.state.firstCharSpecies}\n          secondChar={this.state.secondCharacter}\n          secondCharSpecies={this.state.secondCharSpecies}\n          firstCharIndex={this.state.firstCharIndex}\n          secondCharIndex={this.state.secondCharIndex} />\n        <Reroll event={this.getCharacters}/>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}